# Generated by rust2rpm 26
%bcond_without check
%global debug_package %{nil}

%global crate pcap

Name:           rust-pcap
Version:        1.3.0
Release:        %autorelease
Summary:        Packet capture API around pcap/wpcap

License:        MIT OR Apache-2.0
URL:            https://crates.io/crates/pcap
Source:         %{crates_source}
# Automatically generated patch to strip dependencies and normalize metadata
Patch:          pcap-fix-metadata-auto.diff
# Manually created patch for downstream crate metadata changes
# * Remove the libloading build dep.; we use pkg-config unconditionally
# * Port tests from tempdir to tempfile:
#   https://github.com/rust-pcap/pcap/commit/3f54c0c
Patch:          pcap-fix-metadata.diff
# # * Use pkg-config unconditionally for detecting libpcap; avoid libloading
# # * https://github.com/rust-pcap/pcap/issues/345
Patch10:        0001-Downstream-only-use-pkg-config-unconditionally.patch
# # * Fix IPv4 initialization for test_address_ipv4
# # * https://github.com/rust-pcap/pcap/pull/348
Patch11:        https://github.com/rust-pcap/pcap/pull/348.patch
Patch12:        0001-Port-tests-from-tempdir-to-tempfile.patch

BuildRequires:  cargo-rpm-macros >= 24

%global _description %{expand:
A packet capture API around pcap/wpcap.}

%description %{_description}

%package        devel
Summary:        %{summary}
BuildArch:      noarch
Requires:       pkgconfig(libpcap)

%description    devel %{_description}

This package contains library source intended for building other packages which
use the "%{crate}" crate.

%files          devel
%license %{crate_instdir}/LICENSE-APACHE
%license %{crate_instdir}/LICENSE-MIT
%doc %{crate_instdir}/CHANGELOG.md
%doc %{crate_instdir}/CONTRIBUTING.md
%doc %{crate_instdir}/README.md
%{crate_instdir}/

%package     -n %{name}+default-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+default-devel %{_description}

This package contains library source intended for building other packages which
use the "default" feature of the "%{crate}" crate.

%files       -n %{name}+default-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+all-features-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+all-features-devel %{_description}

This package contains library source intended for building other packages which
use the "all-features" feature of the "%{crate}" crate.

%files       -n %{name}+all-features-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+capture-stream-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+capture-stream-devel %{_description}

This package contains library source intended for building other packages which
use the "capture-stream" feature of the "%{crate}" crate.

%files       -n %{name}+capture-stream-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+futures-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+futures-devel %{_description}

This package contains library source intended for building other packages which
use the "futures" feature of the "%{crate}" crate.

%files       -n %{name}+futures-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+tokio-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+tokio-devel %{_description}

This package contains library source intended for building other packages which
use the "tokio" feature of the "%{crate}" crate.

%files       -n %{name}+tokio-devel
%ghost %{crate_instdir}/Cargo.toml

%prep
%autosetup -n %{crate}-%{version} -p1
%cargo_prep

%generate_buildrequires
%cargo_generate_buildrequires
echo 'pkgconfig(libpcap)'

%build
%cargo_build

%install
%cargo_install

%if %{with check}
%check
%cargo_test
%endif

%changelog
%autochangelog
