%{?mingw_package_header}

%global name1 drmingw

Name:           mingw-%{name1}
Version:        0.9.3
Release:        10%{?dist}
Summary:        Just-in-Time (JIT) debugger for MinGW

# Automatically converted from old format: LGPLv2+ - review is highly recommended.
License:        LicenseRef-Callaway-LGPLv2+
URL:            https://github.com/jrfonseca/%{name1}
Source0:        https://github.com/jrfonseca/drmingw/archive/refs/tags/%{version}.tar.gz
# use system instead of bundled zlib
Patch0:         drmingw-unbundlezlib.patch

BuildRequires:  make
BuildRequires:  mingw32-filesystem
BuildRequires:  mingw64-filesystem
BuildRequires:  mingw32-gcc
BuildRequires:  mingw64-gcc
BuildRequires:  mingw32-gcc-c++
BuildRequires:  mingw64-gcc-c++
BuildRequires:  mingw32-binutils
BuildRequires:  mingw64-binutils
BuildRequires:  mingw32-libsigc++20
BuildRequires:  mingw64-libsigc++20
BuildRequires:  mingw32-glibmm24
BuildRequires:  mingw64-glibmm24
BuildRequires:  mingw32-wpcap
BuildRequires:  mingw64-wpcap
BuildRequires:  mingw32-zlib
BuildRequires:  mingw64-zlib
BuildRequires:  cmake
BuildArch:      noarch

%description
Dr. Mingw is a Just-in-Time (JIT) debugger. When the application
throws an unhandled exception, Dr. Mingw attaches itself to the
application and collects information about the exception, using the
available debugging information.

Dr. Mingw can read debugging information in DWARF format -- generated
by the Gnu C/C++ Compiler, and in a PDB file -- generated by the
Microsoft Visual C++ Compiler. It relies upon the DbgHelp library to
resolve symbols in modules compiled by the Microsoft tools.

The functionality to resolve symbols and dump stack backtraces is
provided as DLLs so it can be embedded on your applications/tools.

# Win32
%package -n mingw32-%{name1}
Summary:        Just-in-Time (JIT) debugger for MinGW

%description -n mingw32-%{name1}
Dr. Mingw is a Just-in-Time (JIT) debugger. When the application
throws an unhandled exception, Dr. Mingw attaches itself to the
application and collects information about the exception, using the
available debugging information.

Dr. Mingw can read debugging information in DWARF format -- generated
by the Gnu C/C++ Compiler, and in a PDB file -- generated by the
Microsoft Visual C++ Compiler. It relies upon the DbgHelp library to
resolve symbols in modules compiled by the Microsoft tools.

The functionality to resolve symbols and dump stack backtraces is
provided as DLLs so it can be embedded on your applications/tools.

%package -n mingw32-%{name1}-devel
Summary:        Development files for %{name}
Requires:       mingw32-%{name1} = %{version}-%{release}

%description -n mingw32-%{name1}-devel
The mingw32-%{name1}-devel package contains libraries and header files for
developing applications that use mingw32-%{name1}.

# Win64
%package -n mingw64-%{name1}
Summary:        Just-in-Time (JIT) debugger for MinGW

%description -n mingw64-%{name1}
Dr. Mingw is a Just-in-Time (JIT) debugger. When the application
throws an unhandled exception, Dr. Mingw attaches itself to the
application and collects information about the exception, using the
available debugging information.

Dr. Mingw can read debugging information in DWARF format -- generated
by the Gnu C/C++ Compiler, and in a PDB file -- generated by the
Microsoft Visual C++ Compiler. It relies upon the DbgHelp library to
resolve symbols in modules compiled by the Microsoft tools.

The functionality to resolve symbols and dump stack backtraces is
provided as DLLs so it can be embedded on your applications/tools.

%package -n mingw64-%{name1}-devel
Summary:        Development files for %{name}
Requires:       mingw64-%{name1} = %{version}-%{release}

%description -n mingw64-%{name1}-devel
The mingw64-%{name1}-devel package contains libraries and header files for
developing applications that use mingw64-%{name1}.

%{?mingw_debug_package}

%prep
%autosetup -n %{name1}-%{version} -p1

%build
%{mingw_cmake}
%{mingw_make} %{?_smp_mflags}


%install
install -d $RPM_BUILD_ROOT%{mingw32_bindir}
install -d $RPM_BUILD_ROOT%{mingw32_libdir}
install -d $RPM_BUILD_ROOT%{mingw32_includedir}
install -p build_win32/bin/addr2line.exe $RPM_BUILD_ROOT%{mingw32_bindir}
install -p build_win32/bin/catchsegv.exe $RPM_BUILD_ROOT%{mingw32_bindir}
install -p build_win32/bin/drmingw.exe $RPM_BUILD_ROOT%{mingw32_bindir}
install -p build_win32/bin/exchndl.dll $RPM_BUILD_ROOT%{mingw32_bindir}
install -p build_win32/bin/mgwhelp.dll $RPM_BUILD_ROOT%{mingw32_bindir}
install -p build_win32/lib/libexchndl.a $RPM_BUILD_ROOT%{mingw32_libdir}
install -p build_win32/lib/libmgwhelp.a $RPM_BUILD_ROOT%{mingw32_libdir}
install -p include/exchndl.h $RPM_BUILD_ROOT%{mingw32_includedir}
chmod a-x $RPM_BUILD_ROOT%{mingw32_libdir}/* $RPM_BUILD_ROOT%{mingw32_includedir}/*
install -d $RPM_BUILD_ROOT%{mingw64_bindir}
install -d $RPM_BUILD_ROOT%{mingw64_libdir}
install -d $RPM_BUILD_ROOT%{mingw64_includedir}
install -p build_win64/bin/addr2line.exe $RPM_BUILD_ROOT%{mingw64_bindir}
install -p build_win64/bin/catchsegv.exe $RPM_BUILD_ROOT%{mingw64_bindir}
install -p build_win64/bin/drmingw.exe $RPM_BUILD_ROOT%{mingw64_bindir}
install -p build_win64/bin/exchndl.dll $RPM_BUILD_ROOT%{mingw64_bindir}
install -p build_win64/bin/mgwhelp.dll $RPM_BUILD_ROOT%{mingw64_bindir}
install -p build_win64/lib/libexchndl.a $RPM_BUILD_ROOT%{mingw64_libdir}
install -p build_win64/lib/libmgwhelp.a $RPM_BUILD_ROOT%{mingw64_libdir}
install -p include/exchndl.h $RPM_BUILD_ROOT%{mingw64_includedir}
chmod a-x $RPM_BUILD_ROOT%{mingw64_libdir}/* $RPM_BUILD_ROOT%{mingw64_includedir}/*

# Win32
%files -n mingw32-%{name1}
%license LICENSE.txt
%doc README.md TODO.md
%{mingw32_bindir}/addr2line.exe
%{mingw32_bindir}/catchsegv.exe
%{mingw32_bindir}/drmingw.exe
%{mingw32_bindir}/exchndl.dll
%{mingw32_bindir}/mgwhelp.dll

%files -n mingw32-%{name1}-devel
%{mingw32_libdir}/libexchndl.a
%{mingw32_libdir}/libmgwhelp.a
%{mingw32_includedir}/exchndl.h

# Win64
%files -n mingw64-%{name1}
%license LICENSE.txt
%doc README.md TODO.md
%{mingw64_bindir}/addr2line.exe
%{mingw64_bindir}/catchsegv.exe
%{mingw64_bindir}/drmingw.exe
%{mingw64_bindir}/exchndl.dll
%{mingw64_bindir}/mgwhelp.dll

%files -n mingw64-%{name1}-devel
%{mingw64_libdir}/libexchndl.a
%{mingw64_libdir}/libmgwhelp.a
%{mingw64_includedir}/exchndl.h

%changelog
* Fri Jan 17 2025 Fedora Release Engineering <releng@fedoraproject.org> - 0.9.3-10
- Rebuilt for https://fedoraproject.org/wiki/Fedora_42_Mass_Rebuild

* Mon Sep 02 2024 Miroslav Such√Ω <msuchy@redhat.com> - 0.9.3-9
- convert license to SPDX

* Thu Jul 18 2024 Fedora Release Engineering <releng@fedoraproject.org> - 0.9.3-8
- Rebuilt for https://fedoraproject.org/wiki/Fedora_41_Mass_Rebuild

* Thu Jun 27 2024 Thomas Sailer <fedora@tsailer.ch> - 1.4-12
- Fix build

* Thu Jan 25 2024 Fedora Release Engineering <releng@fedoraproject.org> - 0.9.3-6
- Rebuilt for https://fedoraproject.org/wiki/Fedora_40_Mass_Rebuild

* Sun Jan 21 2024 Fedora Release Engineering <releng@fedoraproject.org> - 0.9.3-5
- Rebuilt for https://fedoraproject.org/wiki/Fedora_40_Mass_Rebuild

* Thu Jul 20 2023 Fedora Release Engineering <releng@fedoraproject.org> - 0.9.3-4
- Rebuilt for https://fedoraproject.org/wiki/Fedora_39_Mass_Rebuild

* Thu Jan 19 2023 Fedora Release Engineering <releng@fedoraproject.org> - 0.9.3-3
- Rebuilt for https://fedoraproject.org/wiki/Fedora_38_Mass_Rebuild

* Thu Jul 21 2022 Fedora Release Engineering <releng@fedoraproject.org> - 0.9.3-2
- Rebuilt for https://fedoraproject.org/wiki/Fedora_37_Mass_Rebuild

* Sat Mar 26 2022 Sandro Mani <manisandro@gmail.com> - 0.9.3-1
- Update to 0.9.3

* Fri Mar 25 2022 Sandro Mani <manisandro@gmail.com> - 0.9.2-7
- Rebuild with mingw-gcc-12

* Thu Jan 20 2022 Fedora Release Engineering <releng@fedoraproject.org> - 0.9.2-6
- Rebuilt for https://fedoraproject.org/wiki/Fedora_36_Mass_Rebuild

* Thu Jul 22 2021 Fedora Release Engineering <releng@fedoraproject.org> - 0.9.2-5
- Rebuilt for https://fedoraproject.org/wiki/Fedora_35_Mass_Rebuild

* Tue Jan 26 2021 Fedora Release Engineering <releng@fedoraproject.org> - 0.9.2-4
- Rebuilt for https://fedoraproject.org/wiki/Fedora_34_Mass_Rebuild

* Mon Aug 03 2020 Thomas Sailer <t.sailer@alumni.ethz.ch> - 0.9.2-3
- rebuild

* Tue Jul 28 2020 Fedora Release Engineering <releng@fedoraproject.org> - 0.9.2-2
- Rebuilt for https://fedoraproject.org/wiki/Fedora_33_Mass_Rebuild

* Fri Jul 10 2020 Thomas Sailer <t.sailer@alumni.ethz.ch> - 0.9.2-1
- update to 0.9.2

* Tue Sep 22 2015 Thomas Sailer <t.sailer@alumni.ethz.ch> - 0.7.6-1
- initial specfile
