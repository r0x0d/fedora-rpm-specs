# Generated by rust2rpm 27
%bcond check 1

# workaround for OOM issues on i686
%ifarch %{ix86}
%global rustflags_debuginfo 1
%endif

%global crate sequoia-chameleon-gnupg

Name:           rust-sequoia-chameleon-gnupg
Version:        0.12.0
Release:        %autorelease
Summary:        Sequoia's reimplementation of the GnuPG interface

# * sequoia-chameleon-gnupg: GPL-3.0-or-later
# * bundled source file from libgpg-error: LGPL-2.1-or-later
License:        GPL-3.0-or-later AND LGPL-2.1-or-later
URL:            https://crates.io/crates/sequoia-chameleon-gnupg
Source:         %{crates_source}
# * wrapper script to enable working in environment where gpg == gpg-sq
Source1:        gpgconf-sq.sh
Source2:        activate.sh
# Manually created patch for downstream crate metadata changes
# * drop gpg-recorder executable
# * drop features for unavailable crypto backends
# * build with OpenSSL crypto backend
Patch:          sequoia-chameleon-gnupg-fix-metadata.diff
# * fix running integration tests in release mode with prebuilt executable
Patch2:         0001-fix-integration-tests-for-release-mode-and-use-prebu.patch

BuildRequires:  cargo-rpm-macros >= 24
%if %{with check}
BuildRequires:  /usr/bin/gpg
BuildRequires:  /usr/bin/gpgv
BuildRequires:  /usr/bin/gpgconf
BuildRequires:  /usr/bin/sq
%endif

%global _description %{expand:
Sequoia's reimplementation of the GnuPG interface.}

%description %{_description}

%package     -n %{crate}
Summary:        %{summary}
# (Apache-2.0 OR MIT) AND BSD-3-Clause
# (MIT OR Apache-2.0) AND Unicode-DFS-2016
# 0BSD OR MIT OR Apache-2.0
# Apache-2.0
# Apache-2.0 AND MIT
# Apache-2.0 OR BSL-1.0
# Apache-2.0 OR ISC OR MIT
# Apache-2.0 OR MIT
# Apache-2.0 WITH LLVM-exception OR Apache-2.0 OR MIT
# BSD-2-Clause OR Apache-2.0 OR MIT
# BSL-1.0
# GPL-3.0-or-later
# LGPL-2.0-or-later
# MIT
# MIT AND (MIT OR Apache-2.0)
# MIT OR Apache-2.0
# MIT OR Apache-2.0 OR Zlib
# MIT OR Zlib OR Apache-2.0
# MPL-2.0
# Unlicense OR MIT
# Zlib OR Apache-2.0 OR MIT
License:        GPL-3.0-or-later AND Apache-2.0 AND BSD-3-Clause AND BSL-1.0 AND LGPL-2.0-or-later AND MIT AND MPL-2.0 AND Unicode-DFS-2016 AND (0BSD OR MIT OR Apache-2.0) AND (Apache-2.0 OR BSL-1.0) AND (Apache-2.0 OR ISC OR MIT) AND (Apache-2.0 OR MIT) AND (Apache-2.0 WITH LLVM-exception OR Apache-2.0 OR MIT) AND (BSD-2-Clause OR Apache-2.0 OR MIT) AND (MIT OR Apache-2.0 OR Zlib) AND (Unlicense OR MIT)
# LICENSE.dependencies contains a full license breakdown

# includes a copy of src/err-codes.h.in from libgpg-error (unknown version)
Provides:       bundled(libgpg-error)

# the chameleon still relies on gpg-agent and gpgconf (for now)
Requires:       /usr/bin/gpg-agent
Requires:       /usr/bin/gpgconf

%description -n %{crate} %{_description}

%files       -n %{crate}
%license LICENSE.txt
%license LICENSE.dependencies
%doc AUTHORS.GnuPG
%doc README.md
%{_bindir}/gpg-sq
%{_bindir}/gpgv-sq
%{_datadir}/%{crate}/
%{_mandir}/man1/gpg{,v}-sq.1*
%{bash_completions_dir}/gpg{,v}-sq.bash
%{fish_completions_dir}/gpg{,v}-sq.fish
%{zsh_completions_dir}/_gpg{,v}-sq

%prep
%autosetup -n %{crate}-%{version} -p1
%cargo_prep

%generate_buildrequires
%cargo_generate_buildrequires

%build
%cargo_build
%{cargo_license_summary}
%{cargo_license} > LICENSE.dependencies

%install
%cargo_install

# install wrapper script to enable working in environment where gpg == gpg-sq
install -Dpm0644 %{SOURCE2} -T %{buildroot}/%{_datadir}/%{crate}/activate
install -Dpm0755 %{SOURCE1} -T %{buildroot}/%{_datadir}/%{crate}/shims/gpgconf
ln -s /usr/bin/gpg-sq %{buildroot}/%{_datadir}/%{crate}/shims/gpg
ln -s /usr/bin/gpg-sq %{buildroot}/%{_datadir}/%{crate}/shims/gpg2
ln -s /usr/bin/gpgv-sq %{buildroot}/%{_datadir}/%{crate}/shims/gpgv

# install manual pages
mkdir -p %{buildroot}/%{_mandir}/man1
cp -pav target/release/build/%{crate}-*/out/man-pages/*.1 \
    %{buildroot}/%{_mandir}/man1/

# install shell completions
install -Dpm 0644 \
    target/release/build/%{crate}-*/out/shell-completions/gpg-sq.bash \
    %{buildroot}/%{bash_completions_dir}/gpg-sq.bash
install -Dpm 0644 \
    target/release/build/%{crate}-*/out/shell-completions/gpgv-sq.bash \
    %{buildroot}/%{bash_completions_dir}/gpgv-sq.bash
install -Dpm 0644 \
    target/release/build/%{crate}-*/out/shell-completions/gpg-sq.fish \
    %{buildroot}/%{fish_completions_dir}/gpg-sq.fish
install -Dpm 0644 \
    target/release/build/%{crate}-*/out/shell-completions/gpgv-sq.fish \
    %{buildroot}/%{fish_completions_dir}/gpgv-sq.fish
install -Dpm 0644 \
    target/release/build/%{crate}-*/out/shell-completions/_gpg-sq \
    %{buildroot}/%{zsh_completions_dir}/_gpg-sq
install -Dpm 0644 \
    target/release/build/%{crate}-*/out/shell-completions/_gpgv-sq \
    %{buildroot}/%{zsh_completions_dir}/_gpgv-sq

%if %{with check}
%check
# * limit parallelism to avoid hitting resource limits (open files)
%cargo_test -- -- --test-threads 8
%endif

%changelog
%autochangelog
