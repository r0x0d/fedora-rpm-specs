# generated by cabal-rpm-2.2.1
# https://docs.fedoraproject.org/en-US/packaging-guidelines/Haskell/

%global pkg_name gitit
%global pkgver %{pkg_name}-%{version}
%{?haskell_setup}

Name:           %{pkg_name}
Version:        0.15.1.2
Release:        %autorelease
Summary:        Wiki using happstack, git or darcs, and pandoc

# Main package is under GPLv2
# jquery: MIT
# Bluetrip: MIT or GPLv2
# YUI: BSD
# TANGOICONS: CC-BY-SA
License:        GPL-2.0-or-later AND MIT AND BSD-3-Clause AND CC-BY-SA-2.5 AND (MIT OR GPL-2.0-or-later)
Url:            https://hackage.haskell.org/package/%{name}
# Begin cabal-rpm sources:
Source0:        https://hackage.haskell.org/package/%{pkgver}/%{pkgver}.tar.gz
# End cabal-rpm sources

# Configuration produced by running the following command:
# $ gitit --print-default-config > gitit.conf
# Unfortunately, I don't know if it's easy to do this *inside* the package.
Source1:        gitit.conf

# Systemd service file for gitit.
Source2:        gitit.service

# Bundled provides for some JS and CSS.
Provides:       bundled(js-jquery) = 1.2.6
Provides:       bundled(js-jquery-ui) = 1.6rc2
Provides:       bundled(js-jquery-hotkeys) = 0.7.9
Provides:       bundled(js-yui2) = 2.7.0

# I couldn't find any version information for bluetrip or tango icons.
Provides:       bundled(bluetrip)
Provides:       bundled(tango-icon-theme)

# We install a systemd service file.
BuildRequires:  systemd

# Want to create a user for gitit.

# Begin cabal-rpm deps:
BuildRequires:  ghc-Cabal-devel
BuildRequires:  ghc-rpm-macros
BuildRequires:  ghc-HStringTemplate-devel
BuildRequires:  ghc-HTTP-devel
BuildRequires:  ghc-SHA-devel
BuildRequires:  ghc-aeson-devel
BuildRequires:  ghc-base-devel
BuildRequires:  ghc-base64-bytestring-devel
BuildRequires:  ghc-blaze-html-devel
BuildRequires:  ghc-bytestring-devel
BuildRequires:  ghc-containers-devel
BuildRequires:  ghc-directory-devel
BuildRequires:  ghc-doctemplates-devel
BuildRequires:  ghc-feed-devel
BuildRequires:  ghc-filepath-devel
BuildRequires:  ghc-filestore-devel
BuildRequires:  ghc-ghc-devel
BuildRequires:  ghc-ghc-paths-devel
BuildRequires:  ghc-happstack-server-devel
BuildRequires:  ghc-hoauth2-devel
BuildRequires:  ghc-hslogger-devel
BuildRequires:  ghc-http-client-tls-devel
BuildRequires:  ghc-http-conduit-devel
BuildRequires:  ghc-json-devel
BuildRequires:  ghc-mtl-devel
BuildRequires:  ghc-network-devel
BuildRequires:  ghc-network-bsd-devel
BuildRequires:  ghc-network-uri-devel
BuildRequires:  ghc-old-locale-devel
BuildRequires:  ghc-old-time-devel
BuildRequires:  ghc-pandoc-devel
BuildRequires:  ghc-pandoc-types-devel
BuildRequires:  ghc-parsec-devel
BuildRequires:  ghc-pretty-devel
BuildRequires:  ghc-process-devel
BuildRequires:  ghc-random-devel
BuildRequires:  ghc-recaptcha-devel
BuildRequires:  ghc-safe-devel
BuildRequires:  ghc-skylighting-devel
BuildRequires:  ghc-split-devel
BuildRequires:  ghc-syb-devel
BuildRequires:  ghc-tagsoup-devel
BuildRequires:  ghc-temporary-devel
BuildRequires:  ghc-text-devel
BuildRequires:  ghc-time-devel
BuildRequires:  ghc-uri-bytestring-devel
BuildRequires:  ghc-url-devel
BuildRequires:  ghc-utf8-string-devel
BuildRequires:  ghc-uuid-devel
BuildRequires:  ghc-xhtml-devel
BuildRequires:  ghc-xml-devel
BuildRequires:  ghc-xml-conduit-devel
BuildRequires:  ghc-xml-types-devel
BuildRequires:  ghc-xss-sanitize-devel
BuildRequires:  ghc-zlib-devel
%if %{with ghc_prof}
BuildRequires:  ghc-HStringTemplate-prof
BuildRequires:  ghc-HTTP-prof
BuildRequires:  ghc-SHA-prof
BuildRequires:  ghc-aeson-prof
BuildRequires:  ghc-base-prof
BuildRequires:  ghc-base64-bytestring-prof
BuildRequires:  ghc-blaze-html-prof
BuildRequires:  ghc-bytestring-prof
BuildRequires:  ghc-containers-prof
BuildRequires:  ghc-directory-prof
BuildRequires:  ghc-doctemplates-prof
BuildRequires:  ghc-feed-prof
BuildRequires:  ghc-filepath-prof
BuildRequires:  ghc-filestore-prof
BuildRequires:  ghc-ghc-prof
BuildRequires:  ghc-ghc-paths-prof
BuildRequires:  ghc-happstack-server-prof
BuildRequires:  ghc-hoauth2-prof
BuildRequires:  ghc-hslogger-prof
BuildRequires:  ghc-http-client-tls-prof
BuildRequires:  ghc-http-conduit-prof
BuildRequires:  ghc-json-prof
BuildRequires:  ghc-mtl-prof
BuildRequires:  ghc-network-prof
BuildRequires:  ghc-network-bsd-prof
BuildRequires:  ghc-network-uri-prof
BuildRequires:  ghc-old-locale-prof
BuildRequires:  ghc-old-time-prof
BuildRequires:  ghc-pandoc-prof
BuildRequires:  ghc-pandoc-types-prof
BuildRequires:  ghc-parsec-prof
BuildRequires:  ghc-pretty-prof
BuildRequires:  ghc-process-prof
BuildRequires:  ghc-random-prof
BuildRequires:  ghc-recaptcha-prof
BuildRequires:  ghc-safe-prof
BuildRequires:  ghc-skylighting-prof
BuildRequires:  ghc-split-prof
BuildRequires:  ghc-syb-prof
BuildRequires:  ghc-tagsoup-prof
BuildRequires:  ghc-temporary-prof
BuildRequires:  ghc-text-prof
BuildRequires:  ghc-time-prof
BuildRequires:  ghc-uri-bytestring-prof
BuildRequires:  ghc-url-prof
BuildRequires:  ghc-utf8-string-prof
BuildRequires:  ghc-uuid-prof
BuildRequires:  ghc-xhtml-prof
BuildRequires:  ghc-xml-prof
BuildRequires:  ghc-xml-conduit-prof
BuildRequires:  ghc-xml-types-prof
BuildRequires:  ghc-xss-sanitize-prof
BuildRequires:  ghc-zlib-prof
%endif
Requires:       %{name}-common = %{version}-%{release}
# End cabal-rpm deps

%description
Gitit is a wiki backed by a git, darcs, or mercurial filestore. Pages and
uploaded files can be modified either directly via the VCS's command-line tools
or through the wiki's web interface. Pandoc is used for markup processing, so
pages may be written in (extended) markdown, reStructuredText, LaTeX, HTML, or
literate Haskell.

Notable features include

* plugins: dynamically loaded page transformations written in Haskell (see
"Network.Gitit.Interface")

* conversion of TeX math to MathML for display in web browsers

* syntax highlighting of source code files and code snippets

* Atom feeds (site-wide and per-page)

* a library, "Network.Gitit", that makes it simple to include a gitit wiki in
any happstack application

You can see a running demo at <http://gitit.net>.

For usage information: 'gitit --help'.


%package common
Summary:        %{name} common files
BuildArch:      noarch

%description common
This package provides the %{name} common data files.


%package -n ghc-%{name}
Summary:        Haskell %{name} library
Requires:       %{name}-common = %{version}-%{release}

%description -n ghc-%{name}
This package provides the Haskell %{name} shared library.


%package -n ghc-%{name}-devel
Summary:        Haskell %{name} library development files
Provides:       ghc-%{name}-static = %{version}-%{release}
Provides:       ghc-%{name}-static%{?_isa} = %{version}-%{release}
%if %{defined ghc_version}
Requires:       ghc-compiler = %{ghc_version}
%endif
Requires:       ghc-%{name}%{?_isa} = %{version}-%{release}

%description -n ghc-%{name}-devel
This package provides the Haskell %{name} library development files.


%if %{with haddock}
%package -n ghc-%{name}-doc
Summary:        Haskell %{name} library documentation
BuildArch:      noarch
Requires:       ghc-filesystem

%description -n ghc-%{name}-doc
This package provides the Haskell %{name} library documentation.
%endif


%if %{with ghc_prof}
%package -n ghc-%{name}-prof
Summary:        Haskell %{name} profiling library
Requires:       ghc-%{name}-devel%{?_isa} = %{version}-%{release}
Supplements:    (ghc-%{name}-devel and ghc-prof)

%description -n ghc-%{name}-prof
This package provides the Haskell %{name} profiling library.
%endif


%prep
# Begin cabal-rpm setup:
%setup -q
# End cabal-rpm setup

# Create a sysusers.d config file
cat >gitit.sysusers.conf <<EOF
u gitit - 'Account for gitit wiki service' %{_sharedstatedir}/gitit -
EOF


%build
# Begin cabal-rpm build:
%ghc_lib_build
# End cabal-rpm build


%install
# Begin cabal-rpm install
%ghc_lib_install

# note README.markdown is needed for the software to work!
mv %{buildroot}%{_ghcdocdir}{,-common}
# End cabal-rpm install

# Install configuration file.
mkdir -p %{buildroot}%{_sysconfdir}/gitit
cp -a %SOURCE1 %{buildroot}%{_sysconfdir}/gitit/

# Install systemd service file.
mkdir -p %{buildroot}%{_unitdir}
cp -a %SOURCE2 %{buildroot}%{_unitdir}

# Install home directory for gitit user.
# We need some structure here (a "wiki" subdir, for the actual contents)
# which is why it's created in the package.
mkdir -p %{buildroot}%{_sharedstatedir}/gitit/wiki

install -m0644 -D gitit.sysusers.conf %{buildroot}%{_sysusersdir}/gitit.conf


%post
%systemd_post gitit.service

%preun
%systemd_preun gitit.service

%postun
%systemd_postun_with_restart gitit.service


%files
# Begin cabal-rpm files:
%{_bindir}/expireGititCache
%{_bindir}/%{name}
# End cabal-rpm files
%{_unitdir}/gitit.service
%config(noreplace) %{_sysconfdir}/gitit
# We want to install /var/lib/gitit/wiki and make it owned by the
# gitit user created in %pre... I forget if this is the best way to do that.
# (I guess the alternative is to try and make the directories in %post).
%attr(-,gitit,gitit) %dir %{_sharedstatedir}/gitit/
%attr(-,gitit,gitit) %dir %{_sharedstatedir}/gitit/wiki/
%{_sysusersdir}/gitit.conf


%files common
# Begin cabal-rpm files:
%license LICENSE
%doc CHANGES
%{_datadir}/%{pkgver}
# End cabal-rpm files
%license BLUETRIP-LICENSE YUI-LICENSE TANGOICONS


%files -n ghc-%{name} -f ghc-%{name}.files


%files -n ghc-%{name}-devel -f ghc-%{name}-devel.files


%if %{with haddock}
%files -n ghc-%{name}-doc -f ghc-%{name}-doc.files
%license LICENSE
%endif


%if %{with ghc_prof}
%files -n ghc-%{name}-prof -f ghc-%{name}-prof.files
%endif


%changelog
%autochangelog
