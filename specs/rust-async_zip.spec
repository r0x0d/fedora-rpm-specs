# Generated by rust2rpm 27
%bcond check 1
%global debug_package %{nil}

%global crate async_zip

Name:           rust-async_zip
Version:        0.0.17
Release:        %autorelease
Summary:        Asynchronous ZIP archive reading/writing crate

License:        MIT
URL:            https://crates.io/crates/async_zip
Source:         %{crate}-%{version}-clean.crate
# * script to create tarball with only permissible content: run "rust2rpm" and
#   then "./gen_clean_tarball.sh" for new versions
Source10:       gen_clean_tarball.sh
# Manually created patch for downstream crate metadata changes
# * drop some dev-dependencies that are only required for compiling examples
# * allow sanitize-filename 0.6,
#   https://github.com/Majored/rs-async-zip/pull/153
Patch:          async_zip-fix-metadata.diff
# * compile and run large-file tests only on 64-bit architectures: they don't
#   compile and would not work on 32-bit architectures
Patch10:        0001-compile-and-run-large-file-tests-only-on-64-bit-arch.patch

BuildRequires:  cargo-rpm-macros >= 24

%global _description %{expand:
An asynchronous ZIP archive reading/writing crate.}

%description %{_description}

%package        devel
Summary:        %{summary}
BuildArch:      noarch

%description    devel %{_description}

This package contains library source intended for building other packages which
use the "%{crate}" crate.

%files          devel
%license %{crate_instdir}/LICENSE
%doc %{crate_instdir}/README.md
%{crate_instdir}/

%package     -n %{name}+default-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+default-devel %{_description}

This package contains library source intended for building other packages which
use the "default" feature of the "%{crate}" crate.

%files       -n %{name}+default-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+async-compression-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+async-compression-devel %{_description}

This package contains library source intended for building other packages which
use the "async-compression" feature of the "%{crate}" crate.

%files       -n %{name}+async-compression-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+bzip2-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+bzip2-devel %{_description}

This package contains library source intended for building other packages which
use the "bzip2" feature of the "%{crate}" crate.

%files       -n %{name}+bzip2-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+chrono-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+chrono-devel %{_description}

This package contains library source intended for building other packages which
use the "chrono" feature of the "%{crate}" crate.

%files       -n %{name}+chrono-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+deflate-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+deflate-devel %{_description}

This package contains library source intended for building other packages which
use the "deflate" feature of the "%{crate}" crate.

%files       -n %{name}+deflate-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+deflate64-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+deflate64-devel %{_description}

This package contains library source intended for building other packages which
use the "deflate64" feature of the "%{crate}" crate.

%files       -n %{name}+deflate64-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+full-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+full-devel %{_description}

This package contains library source intended for building other packages which
use the "full" feature of the "%{crate}" crate.

%files       -n %{name}+full-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+lzma-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+lzma-devel %{_description}

This package contains library source intended for building other packages which
use the "lzma" feature of the "%{crate}" crate.

%files       -n %{name}+lzma-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+tokio-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+tokio-devel %{_description}

This package contains library source intended for building other packages which
use the "tokio" feature of the "%{crate}" crate.

%files       -n %{name}+tokio-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+tokio-fs-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+tokio-fs-devel %{_description}

This package contains library source intended for building other packages which
use the "tokio-fs" feature of the "%{crate}" crate.

%files       -n %{name}+tokio-fs-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+tokio-util-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+tokio-util-devel %{_description}

This package contains library source intended for building other packages which
use the "tokio-util" feature of the "%{crate}" crate.

%files       -n %{name}+tokio-util-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+xz-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+xz-devel %{_description}

This package contains library source intended for building other packages which
use the "xz" feature of the "%{crate}" crate.

%files       -n %{name}+xz-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+zstd-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+zstd-devel %{_description}

This package contains library source intended for building other packages which
use the "zstd" feature of the "%{crate}" crate.

%files       -n %{name}+zstd-devel
%ghost %{crate_instdir}/Cargo.toml

%prep
%autosetup -n %{crate}-%{version} -p1
%cargo_prep
# * drop example code that requires additional dependencies
rm examples/actix_multipart.rs

%generate_buildrequires
%cargo_generate_buildrequires

%build
%cargo_build

%install
%cargo_install

%if %{with check}
%check
%cargo_test
%endif

%changelog
%autochangelog
