Name:           capstone
Version:        5.0.5
Release:        %autorelease
Summary:        A lightweight multi-platform, multi-architecture disassembly framework
License:        BSD-3-Clause AND BSD-4-Clause AND APSL-2.0 AND NCSA AND MIT
URL:            http://www.capstone-engine.org/
VCS:            git:https://github.com/capstone-engine/capstone/
#               https://github.com/capstone-engine/capstone/releases

%global         common_desc %{expand:
Capstone is a disassembly framework with the target of becoming the ultimate
disasm engine for binary analysis and reversing in the security community.}


%define _lto_cflags %{nil}
#%%global _hardened_build 1

%global         gituser         capstone-engine
%global         gitname         capstone
# 5.0.5 release
%global         gitdate         20250117
%global         commit          55261253c3f14d957c58382df82e61123dad45b9
%global         shortcommit     %(c=%{commit}; echo ${c:0:7})

# Source0:      https://github.com/%%{gituser}/%%{gitname}/archive/%%{commit}/%%{name}-%%{version}-%%{shortcommit}.tar.gz
Source0:        https://github.com/%{gituser}/%{gitname}/archive/%{version}.tar.gz#/%{name}-%{version}.tar.gz

# Manpage for cstool is missing in the package, add one generated by help2man
Source1:        cstool.1

# modified to remove the GH CI modifications from this patch
# Patch:          https://patch-diff.githubusercontent.com/raw/capstone-engine/capstone/pull/2099.patch
# Patch0:         https://github.com/capstone-engine/capstone/pull/2099.patch#/capstone-5.0.1-cibuildwheel.patch
# Patch0:         capstone-5.0.1-platform.patch

# Ocaml binding is not using local path for the includes/links
Patch1:         capstone-5.0.1-ocaml.patch


# Build with python3 package by default
%bcond_without  python3

# Build without python2 package for newer releases f32+ and rhel8+
%if (0%{?fedora} && 0%{?fedora} >= 32 ) || ( 0%{?rhel} && 0%{?rhel} >= 8 )
%bcond_with     python2
%else
%bcond_without  python2
%endif

# Build with java binding
%bcond_without  java

# Build without ocaml binding - it is not ready to be distributed as ocaml shared library
%bcond_with  ocaml



%global srcname distribute

BuildRequires:  gcc
BuildRequires:  make
BuildRequires:  git

%if %{with java}
%ifarch %{java_arches}
BuildRequires:  jna
BuildRequires:  java-devel
%endif
%endif

%if %{with python2}
BuildRequires:  python2
BuildRequires:  python2-devel
BuildRequires:  python2-pip
BuildRequires:  python2-setuptools
%endif

%if %{with python3}
BuildRequires:  python%{python3_pkgversion}
BuildRequires:  python%{python3_pkgversion}-devel
BuildRequires:  python%{python3_pkgversion}-pip
BuildRequires:  python%{python3_pkgversion}-setuptools
BuildRequires:  python%{python3_pkgversion}-wheel
BuildRequires:  python%{python3_pkgversion}-pytest
%endif

%if %{with ocaml}
BuildRequires:  ocaml
BuildRequires:  ocaml-ocamlbuild
%endif

%description
%{common_desc}

%package        devel
Summary:        Development files for %{name}
Requires:       %{name}%{?_isa} = %{version}-%{release}

%description    devel
%{common_desc}
The %{name}-devel package contains libraries and header files for
developing applications that use %{name}.


%package        static
Summary:        Static linking of %{name} library

%description    static
%{common_desc}
The %{name}-static package contains files needed for static linking
of %{name} library into static binaries.



%if %{with python2}
%package        -n python2-capstone
BuildArch:      noarch
%{?python_provide:%python_provide python2-capstone}
# Remove before F30
# loading the libcapstone dynamically using ctypes, not tied to certain architecture
Provides:       %{name}-python = %{version}-%{release}
Obsoletes:      %{name}-python < %{version}-%{release}
Summary:        Python bindings for %{name}
Requires:       %{name} = %{version}-%{release}

%description    -n python2-capstone
%{common_desc}
The python2-capstone package contains python bindings for %{name}.
# with_python2
%endif



%if %{with python3}
%package	-n python%{python3_pkgversion}-capstone
BuildArch:      noarch
%{?python_provide:%python_provide python%{python3_pkgversion}-capstone}
Provides:       %{name}-python%{python3_pkgversion} = %{version}-%{release}
Obsoletes:      %{name}-python%{python3_pkgversion} < %{version}-%{release}
Requires:       %{name} = %{version}-%{release}
Summary:        Python3 bindings for %{name}


%description    -n python%{python3_pkgversion}-capstone
%{common_desc}
The python%{python3_pkgversion}-capstone package contains python3 bindings for %{name}.
#with python3
%endif


%if %{with java}
%ifarch %{java_arches}
%package        java
Summary:        Java bindings for %{name}
Requires:       %{name} = %{version}-%{release}
BuildArch:      noarch

%description    java
%{common_desc}
The %{name}-java package contains java bindings for %{name}.
%endif
%endif

%if %{with ocaml}
%package        -n ocaml-%{name}
Summary:        OCaml bindings for %{name}
Requires:       %{name}%{?_isa} = %{version}-%{release}

%description    -n ocaml-%{name}
%{common_desc}
The ocaml-%{name} package contains OCaml bindings for %{name}.
%endif


%prep
# autosetup -n %%{gitname}-%%{commit} -S git
%autosetup -n %{gitname}-%{version} -p1

%if %{with python3}
pushd bindings/python
%pyproject_buildrequires
popd
%endif


%build
V=1 CFLAGS="%{optflags}" \
PREFIX="%{_prefix}" LIBDIRARCH="%{_lib}" INCDIR="%{_includedir}" \
%make_build PYTHON2=%{__python2} PYTHON3=%{__python3}

# Fix pkgconfig file
grep -v archive capstone.pc > capstone.pc.tmp
mv capstone.pc.tmp capstone.pc

# build python bindings
pushd bindings/python

%if %{with python2}
%py2_build
%endif

%if %{with python3}
# %%pyproject_wheel
%py3_build
%endif
popd

%if %{with java}
%ifarch %{java_arches}
# build java bindings needs some python runtime
pushd bindings/java
%if %{with python3}
%make_build PYTHON2=%{__python3} PYTHON3=%{__python3} CFLAGS="%{optflags}" # %{?_smp_mflags} parallel seems broken
%else
%make_build PYTHON2=%{__python2} PYTHON3=%{__python2} CFLAGS="%{optflags}" # %{?_smp_mflags} parallel seems broken
%endif
popd
%endif
%endif

%if %{with ocaml}
pushd bindings/ocaml
# build ocaml bindings needs some python runtime
%if %{with python3}
%make_build PYTHON2=%{__python3} PYTHON3=%{__python3} CFLAGS="%{optflags}" -j1 # %{?_smp_mflags} parallel seems broken
%else
%make_build PYTHON2=%{__python2} PYTHON3=%{__python2} CFLAGS="%{optflags}" -j1 # %{?_smp_mflags} parallel seems broken
%endif
popd
%endif


%install
DESTDIR=%{buildroot} PREFIX="%{_prefix}" LIBDIRARCH=%{_lib} \
INCDIR="%{_includedir}" make install

# cleanup static libraries
find %{buildroot} -name '*.la' -exec rm -f {} ';'
# find %%{buildroot} -name '*.a' -exec rm -f {} ';'

# add the manpage
install -d -D %{buildroot}%{_mandir}/man1
install -p -m 644 -D %{SOURCE1} %{buildroot}%{_mandir}/man1/


# install python bindings
pushd bindings/python
%if %{with python2}
%py2_install

# cleanup the install
rm -rf %{buildroot}%{python2_sitelib}/capstone/lib/libcapstone.a
rm -rf %{buildroot}%{python2_sitelib}/capstone/lib/libcapstone.so
rm -rf %{buildroot}%{python2_sitelib}/capstone/include/capstone
%endif

%if %{with python3}
%py3_install
# %%pyproject_install
# %%pyproject_save_files capstone

# cleanup the install
rm -rf %{buildroot}%{python3_sitelib}/capstone/lib/libcapstone.a
rm -rf %{buildroot}%{python3_sitelib}/capstone/lib/libcapstone.so
rm -rf %{buildroot}%{python3_sitelib}/capstone/include/capstone

%endif
popd

%if %{with java}
%ifarch %{java_arches}
# install java bindings
install -D -p -m 0644 bindings/java/%{name}.jar  %{buildroot}/%{_javadir}/%{name}.jar
%endif
%endif

%if %{with ocaml}
# install ocaml binding
%endif



%check
# ln -s libcapstone.so.5 libcapstone.so
make check LD_LIBRARY_PATH="`pwd`"

%if %{with python3}
pushd bindings/python
%pytest -sv -k "not testcb and not test_cs_disasm_quick"
popd
%endif

%if %{with ocaml}
pushd bindings/ocaml
make check LD_LIBRARY_PATH="`pwd`"
popd
%endif


%ldconfig_scriptlets


%files
%license LICENSE.TXT LICENSE_LLVM.TXT
%doc CREDITS.TXT ChangeLog README.md SPONSORS.TXT
%{_libdir}/*.so.*
%{_bindir}/cstool
%{_mandir}/man1/cstool.1*


%files devel
%{_includedir}/*
%{_libdir}/*.so
%{_libdir}/pkgconfig/*


%files static
%license LICENSE.TXT LICENSE_LLVM.TXT
%{_libdir}/libcapstone.a


%if %{with python2}
%files -n python2-capstone
%{python2_sitelib}/*egg-info
%{python2_sitelib}/%{name}
%endif


%if %{with python3}
#%%files -n python%%{python3_pkgversion}-capstone -f %%{pyproject_files}
%files -n python%{python3_pkgversion}-capstone
%{python3_sitelib}/capstone*
%endif


%if %{with java}
%ifarch %{java_arches}
%files java
%{_javadir}/
%endif
%endif


%if %{with ocaml}
%files -n ocaml-%{name}
%endif


%changelog
%autochangelog
