# generated by cabal-rpm-2.2.2
# https://docs.fedoraproject.org/en-US/packaging-guidelines/Haskell/

%global pkg_name hashtables
%global pkgver %{pkg_name}-%{version}
%{?haskell_setup}

# testsuite missing deps: test-framework test-framework-hunit test-framework-quickcheck2

Name:           ghc-%{pkg_name}
Version:        1.3.1
Release:        %autorelease
Summary:        Mutable hash tables in the ST monad

License:        BSD-3-Clause
Url:            https://hackage.haskell.org/package/hashtables
# Begin cabal-rpm sources:
Source0:        https://hackage.haskell.org/package/%{pkgver}/%{pkgver}.tar.gz
# End cabal-rpm sources
# https://github.com/gregorycollins/hashtables/issues/92
Patch0:         https://patch-diff.githubusercontent.com/raw/gregorycollins/hashtables/pull/93.patch

# Begin cabal-rpm deps:
BuildRequires:  ghc-Cabal-devel
BuildRequires:  ghc-rpm-macros
BuildRequires:  ghc-base-devel
BuildRequires:  ghc-hashable-devel
BuildRequires:  ghc-primitive-devel
BuildRequires:  ghc-vector-devel
%if %{with ghc_prof}
BuildRequires:  ghc-base-prof
BuildRequires:  ghc-hashable-prof
BuildRequires:  ghc-primitive-prof
BuildRequires:  ghc-vector-prof
%endif
# End cabal-rpm deps

%description
This package provides a couple of different implementations of mutable
hash tables in the ST monad, as well as a typeclass abstracting their
common operations, and a set of wrappers to use the hash tables in the
IO monad.

This package currently contains three hash table implementations:

1. Data.HashTable.ST.Basic contains a basic open-addressing hash table
using linear probing as the collision strategy.

2. Data.HashTable.ST.Cuckoo contains an implementation of "cuckoo hashing"
which has worst-case O(1) lookups and can reach a high "load factor".

3. Data.HashTable.ST.Linear contains a linear hash table, which trades
some insert and lookup performance for higher space efficiency and
much shorter delays when expanding the table.


%package devel
Summary:        Haskell %{pkg_name} library development files
Provides:       %{name}-static = %{version}-%{release}
Provides:       %{name}-static%{?_isa} = %{version}-%{release}
%if %{defined ghc_version}
Requires:       ghc-compiler = %{ghc_version}
%endif
Requires:       %{name}%{?_isa} = %{version}-%{release}

%description devel
This package provides the Haskell %{pkg_name} library development files.
2. "Data.HashTable.ST.Basic" contains a basic open-addressing hash table using
linear probing as the collision strategy. On a pure speed basis it should
currently be the fastest available Haskell hash table implementation for
lookups, although it has a higher memory overhead than the other tables and can
suffer from long delays when the table is resized because all of the elements
in the table need to be rehashed.



%if %{with haddock}
%package doc
Summary:        Haskell %{pkg_name} library documentation
BuildArch:      noarch
Requires:       ghc-filesystem

%description doc
This package provides the Haskell %{pkg_name} library documentation.
%endif


%if %{with ghc_prof}
%package prof
Summary:        Haskell %{pkg_name} profiling library
Requires:       %{name}-devel%{?_isa} = %{version}-%{release}
Supplements:    (%{name}-devel and ghc-prof)

%description prof
This package provides the Haskell %{pkg_name} profiling library.
%endif


%prep
# Begin cabal-rpm setup:
%setup -q -n %{pkgver}
%autopatch -p1
# End cabal-rpm setup


%build
# Begin cabal-rpm build:
%ghc_lib_build
# End cabal-rpm build


%install
# Begin cabal-rpm install
%ghc_lib_install
# End cabal-rpm install


%files -f %{name}.files
# Begin cabal-rpm files:
%license LICENSE
# End cabal-rpm files


%files devel -f %{name}-devel.files
%doc README.md changelog.md


%if %{with haddock}
%files doc -f %{name}-doc.files
%license LICENSE
%endif


%if %{with ghc_prof}
%files prof -f %{name}-prof.files
%endif


%changelog
%autochangelog
